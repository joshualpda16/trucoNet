/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import clases.Juego;
import clases.SimpleClient;
import clases.SimpleServer;
import clases.claseGeneral;
import java.awt.Color;
import java.awt.Image;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;

/**
 *
 * @author Joshua
 */
public class frmJuego extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmJuego
     */
    public frmJuego() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        suCarta3 = new javax.swing.JLabel();
        suCarta2 = new javax.swing.JLabel();
        suCartaTirada3 = new javax.swing.JLabel();
        miCarta3 = new javax.swing.JLabel();
        miCarta2 = new javax.swing.JLabel();
        miCarta1 = new javax.swing.JLabel();
        suCarta1 = new javax.swing.JLabel();
        suCartaTirada1 = new javax.swing.JLabel();
        suCartaTirada2 = new javax.swing.JLabel();
        miCartaTirada3 = new javax.swing.JLabel();
        miCartaTirada2 = new javax.swing.JLabel();
        miCartaTirada1 = new javax.swing.JLabel();
        lblYo = new javax.swing.JLabel();
        lblEl = new javax.swing.JLabel();
        lblSusTantos = new javax.swing.JLabel();
        lblMisTantos = new javax.swing.JLabel();
        lblYoCanto = new javax.swing.JLabel();
        lblElCanta = new javax.swing.JLabel();
        cmdAlMazo = new javax.swing.JButton();
        cmdEnvido = new javax.swing.JButton();
        cmdRealEnvido = new javax.swing.JButton();
        cmdFaltaEnvido = new javax.swing.JButton();
        cmdNoQuiero = new javax.swing.JButton();
        cmdTruco = new javax.swing.JButton();
        cmdQuiero = new javax.swing.JButton();
        tabChatPuntos = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtChat = new javax.swing.JTextPane();
        txtEnviarChat = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        lblMisPuntos3 = new javax.swing.JLabel();
        lblMisPuntos1 = new javax.swing.JLabel();
        lblMisPuntos2 = new javax.swing.JLabel();
        lblMisPuntos4 = new javax.swing.JLabel();
        lblMisPuntos5 = new javax.swing.JLabel();
        lblMisPuntos6 = new javax.swing.JLabel();
        lblSusPuntos1 = new javax.swing.JLabel();
        lblSusPuntos2 = new javax.swing.JLabel();
        lblSusPuntos3 = new javax.swing.JLabel();
        lblSusPuntos4 = new javax.swing.JLabel();
        lblSusPuntos5 = new javax.swing.JLabel();
        lblSusPuntos6 = new javax.swing.JLabel();
        lblTabla = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setClosable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        suCarta3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(suCarta3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 60, 100));

        suCarta2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(suCarta2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, 60, 100));

        suCartaTirada3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(suCartaTirada3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 120, 70, 110));

        miCarta3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        miCarta3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miCarta3MouseClicked(evt);
            }
        });
        jPanel1.add(miCarta3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 370, 90, 130));

        miCarta2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        miCarta2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miCarta2MouseClicked(evt);
            }
        });
        jPanel1.add(miCarta2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 370, 90, 130));

        miCarta1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        miCarta1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miCarta1MouseClicked(evt);
            }
        });
        jPanel1.add(miCarta1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 370, 90, 130));

        suCarta1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(suCarta1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 60, 100));

        suCartaTirada1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(suCartaTirada1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 70, 110));

        suCartaTirada2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(suCartaTirada2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 120, 70, 110));

        miCartaTirada3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(miCartaTirada3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 240, 70, 110));

        miCartaTirada2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(miCartaTirada2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 240, 70, 110));

        miCartaTirada1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(miCartaTirada1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 70, 110));

        lblYo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblYo.setText("Yo");
        jPanel1.add(lblYo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 480, 30, -1));

        lblEl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblEl.setText("Ã‰l");
        jPanel1.add(lblEl, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 20, 20, -1));

        lblSusTantos.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        lblSusTantos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(lblSusTantos, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 120, 80, 60));

        lblMisTantos.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        lblMisTantos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(lblMisTantos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 80, 60));
        jPanel1.add(lblYoCanto, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 120, 70));
        jPanel1.add(lblElCanta, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 50, 120, 70));

        cmdAlMazo.setText("Al Mazo");
        cmdAlMazo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAlMazoActionPerformed(evt);
            }
        });

        cmdEnvido.setText("Envido");
        cmdEnvido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEnvidoActionPerformed(evt);
            }
        });

        cmdRealEnvido.setText("Real Envido");
        cmdRealEnvido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRealEnvidoActionPerformed(evt);
            }
        });

        cmdFaltaEnvido.setText("Falta Envido");
        cmdFaltaEnvido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFaltaEnvidoActionPerformed(evt);
            }
        });

        cmdNoQuiero.setText("No Quiero");
        cmdNoQuiero.setEnabled(false);
        cmdNoQuiero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNoQuieroActionPerformed(evt);
            }
        });

        cmdTruco.setText("Truco");
        cmdTruco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTrucoActionPerformed(evt);
            }
        });

        cmdQuiero.setText("Quiero");
        cmdQuiero.setEnabled(false);
        cmdQuiero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdQuieroActionPerformed(evt);
            }
        });

        txtChat.setEditable(false);
        jScrollPane2.setViewportView(txtChat);

        txtEnviarChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnviarChatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEnviarChat)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEnviarChat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tabChatPuntos.addTab("Chat", jPanel3);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(lblMisPuntos3, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 108, 38, 35));
        jPanel2.add(lblMisPuntos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 36, 38, 35));
        jPanel2.add(lblMisPuntos2, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 72, 38, 35));
        jPanel2.add(lblMisPuntos4, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 144, 38, 35));
        jPanel2.add(lblMisPuntos5, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 180, 38, 35));
        jPanel2.add(lblMisPuntos6, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 216, 38, 35));
        jPanel2.add(lblSusPuntos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 36, 38, 35));
        jPanel2.add(lblSusPuntos2, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 72, 38, 35));
        jPanel2.add(lblSusPuntos3, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 108, 38, 35));
        jPanel2.add(lblSusPuntos4, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 144, 38, 35));
        jPanel2.add(lblSusPuntos5, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 180, 38, 35));
        jPanel2.add(lblSusPuntos6, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 216, 38, 35));
        jPanel2.add(lblTabla, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 172, 260));

        tabChatPuntos.addTab("Puntos", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmdAlMazo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmdFaltaEnvido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmdEnvido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmdTruco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmdRealEnvido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmdQuiero, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdNoQuiero, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(tabChatPuntos))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tabChatPuntos, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdAlMazo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmdQuiero, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                            .addComponent(cmdNoQuiero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdTruco, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdFaltaEnvido, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdRealEnvido, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdEnvido, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void cantarTruco(){
        int miId=claseGeneral.getMiId();
        if(claseGeneral.isSoyServer()){SimpleServer.enviarDatos("JGOTRC1"+miId);}
        else{SimpleClient.enviarDatos("JGOTRC1"+miId);}
        pintar(lblYoCanto,"Truco");
        pintar(lblElCanta,"Blanco");
        claseGeneral.miJuego.setRonda(false);
        apagarTodosBotones();
        claseGeneral.miJuego.setEsperando("truco");
    }
    
    private void cantarReTruco(){
        int miId=claseGeneral.getMiId();
        if(claseGeneral.isSoyServer()){SimpleServer.enviarDatos("JGOTRC2"+miId);}
        else{SimpleClient.enviarDatos("JGOTRC2"+miId);}
        pintar(lblYoCanto,"ReTruco");
        pintar(lblElCanta,"Blanco");
        claseGeneral.miJuego.setRonda(false);
        apagarTodosBotones();
        claseGeneral.miJuego.setInstanciaTruco(2);
        claseGeneral.miJuego.setEsperando("retruco");
    }
    
    private void cantarValeCuatro(){
        int miId=claseGeneral.getMiId();
        if(claseGeneral.isSoyServer()){SimpleServer.enviarDatos("JGOTRC3"+miId);}
        else{SimpleClient.enviarDatos("JGOTRC3"+miId);}
        pintar(lblYoCanto,"ValeCuatro");
        pintar(lblElCanta,"Blanco");
        claseGeneral.miJuego.setRonda(false);
        apagarTodosBotones();
        claseGeneral.miJuego.setEsperando("valecuatro");
        claseGeneral.miJuego.setInstanciaTruco(3);
    }
    
    private void quieroLosTantos(){
        if(claseGeneral.miJuego.getMano()==claseGeneral.getMiId()){
            //Si soy mano, muestro mis cartas
            lblMisTantos.setText(""+claseGeneral.lstJugadores.get(claseGeneral.getMiId()).contarTantos());
            //EnvÃ­o el quiero
            claseGeneral.enviarQuiero();
            //Espero a que muestre
        } else{
            lblSusTantos.setText(""+claseGeneral.lstJugadores.get(Math.abs(claseGeneral.getMiId()-1)).contarTantos());

            frmJuego.cmdQuiero.setText("Cantar");
            frmJuego.cmdQuiero.setEnabled(true);
            frmJuego.cmdNoQuiero.setText("Son Buenas");
            frmJuego.cmdNoQuiero.setEnabled(true);
            
             claseGeneral.enviarQuiero();
        }
    }
    
    public void apagarTodosBotones(){
        cmdEnvido.setEnabled(false);
        cmdRealEnvido.setEnabled(false);
        cmdFaltaEnvido.setEnabled(false);
        cmdTruco.setEnabled(false);
        cmdQuiero.setEnabled(false);
        cmdNoQuiero.setEnabled(false);
    }
    
    public void prenderBotones(){
        cmdAlMazo.setEnabled(true);
        if(claseGeneral.miJuego.getInstanciaJuego()==0){
            if(claseGeneral.miJuego.isEnvido()){
                switch(claseGeneral.miJuego.getInstanciaEnvido()){
                    case 0:
                        cmdEnvido.setEnabled(true);
                        cmdRealEnvido.setEnabled(true);
                        cmdFaltaEnvido.setEnabled(true);
                        break;
                    case 1:
                        cmdEnvido.setEnabled(true);
                    case 2:
                        cmdRealEnvido.setEnabled(true);
                    case 3:
                    case 4:
                        cmdQuiero.setEnabled(true);
                        cmdNoQuiero.setEnabled(true);
                    
                    case 6:
                        cmdFaltaEnvido.setEnabled(true);
                        break;
                }
            }
        }
        if((claseGeneral.miJuego.isTruco())&&(claseGeneral.miJuego.getTurno()==claseGeneral.getMiId())){
            switch(claseGeneral.miJuego.getInstanciaTruco()){
                case 0:
                    cmdTruco.setText("Truco");
                    cmdTruco.setEnabled(true);
                    break;
                case 2:
                    if(claseGeneral.miJuego.getTieneElQuiero()==claseGeneral.getMiId()){
                        cmdTruco.setText("Quiero re truco!");
                        cmdTruco.setEnabled(true);
                    }
                    break;
                case 3:
                    if(claseGeneral.miJuego.getTieneElQuiero()==claseGeneral.getMiId()){
                        cmdTruco.setText("Quiero vale cuatro!");
                        cmdTruco.setEnabled(true);
                    }
                    break;
            }
        }
    }
    
    public void miTurno(){
        claseGeneral.miJuego.setTurno(claseGeneral.getMiId());
        lblYo.setForeground(Color.BLUE);
        lblEl.setForeground(Color.BLACK);
    }
    
    public void suTurno(){
        claseGeneral.miJuego.setTurno(Math.abs(claseGeneral.getMiId()-1));
        lblYo.setForeground(Color.BLACK);
        lblEl.setForeground(Color.BLUE);
    }
    
    private void tirarCarta(int id){
        int miId = claseGeneral.getMiId();
        if(claseGeneral.miJuego.getTurno()==miId){
            String stringCarta = claseGeneral.lstJugadores.get(miId).getCartas().get(id).traerCarta();
            int tiradas = claseGeneral.lstJugadores.get(miId).getCartasTiradas();
            
            //<editor-fold defaultstate="collapsed" desc="DÃ³nde tiro la carta">
            switch(tiradas){
                case 0:
                    switch(id){
                        case 0:
                            pintar(miCartaTirada1,stringCarta);
                            frmJuego.miCartaTirada1.repaint();
                            pintar(miCarta1,"Blanco");
                            break;
                        case 1:
                            pintar(miCartaTirada1,stringCarta);
                            pintar(miCarta2,"Blanco");
                            break;
                        case 2:
                            pintar(miCartaTirada1,stringCarta);
                            pintar(miCarta3,"Blanco");
                            break;
                    }
                    break;
                case 1:
                    switch(id){
                        case 0:
                            pintar(miCartaTirada2,stringCarta);
                            pintar(miCarta1,"Blanco");
                            break;
                        case 1:
                            pintar(miCartaTirada2,stringCarta);
                            pintar(miCarta2,"Blanco");
                            break;
                        case 2:
                            pintar(miCartaTirada2,stringCarta);
                            pintar(miCarta3,"Blanco");
                            break;
                    }
                    break;
                case 2:
                    switch(id){
                        case 0:
                            pintar(miCartaTirada3,stringCarta);
                            pintar(miCarta1,"Blanco");
                            break;
                        case 1:
                            pintar(miCartaTirada3,stringCarta);
                            pintar(miCarta2,"Blanco");
                            break;
                        case 2:
                            pintar(miCartaTirada3,stringCarta);
                            pintar(miCarta3,"Blanco");
                            break;
                    }
                    break;
            }
            //</editor-fold>

            //Envio la carta tirada
            if(claseGeneral.isSoyServer()){SimpleServer.enviarDatos("JGOCRTA"+miId+id);}
            else{SimpleClient.enviarDatos("JGOCRTA"+miId+id);}   
            
            //Actualizo el juego
            claseGeneral.lstJugadores.get(miId).setCartasTiradas(tiradas+1); //TirÃ© la primer carta
            
            boolean yoGano=false,yoPierdo=false;
            
            if(claseGeneral.miJuego.isPrimeraCarta()){
                //frmPrincipal.log("Es la primera carta");
                suTurno();
                claseGeneral.miJuego.setCartaInstancia(claseGeneral.lstJugadores.get(miId).getCartas().get(id));
                claseGeneral.miJuego.setPrimeraCarta(false);
                apagarTodosBotones();
            } else{
                int suID = Math.abs(miId-1);
                //frmPrincipal.log("No es la primera carta");
                if(Juego.compararCartas(claseGeneral.lstJugadores.get(miId).getCartas().get(id),claseGeneral.miJuego.getCartaInstancia())){
                    //frmPrincipal.log("Mi carta es mÃ¡s grande, mi turno");
                    miTurno();
                    claseGeneral.miJuego.setPrimeraCarta(true);
                    apagarTodosBotones();
                    claseGeneral.lstJugadores.get(miId).setInstanciasGanadas(claseGeneral.lstJugadores.get(miId).getInstanciasGanadas()+1);
                    //frmPrincipal.log("Me sumo una instancia ganada");
                    
                    if(claseGeneral.miJuego.getInstanciaJuego()==0){claseGeneral.miJuego.setPrimeraEnCasa(miId);}
                    
                    if(claseGeneral.lstJugadores.get(miId).getInstanciasGanadas()==2){
                        yoGano=true;
                    }
                } else if(Juego.mismosPuntos(claseGeneral.lstJugadores.get(miId).getCartas().get(id),claseGeneral.miJuego.getCartaInstancia())){
                    if(claseGeneral.miJuego.getInstanciaJuego()==0){
                        claseGeneral.lstJugadores.get(miId).setInstanciasGanadas(claseGeneral.lstJugadores.get(miId).getInstanciasGanadas()+1);
                        //frmPrincipal.log("Parda");
                        claseGeneral.miJuego.setPrimeraCarta(true);
                        apagarTodosBotones();
                        claseGeneral.miJuego.setTurno(claseGeneral.miJuego.getMano());
                        if(claseGeneral.miJuego.getTurno()==claseGeneral.getMiId()){
                            miTurno();
                        } else{
                            suTurno();
                        }
                        
                    } else if((claseGeneral.miJuego.getInstanciaJuego()==1)||(claseGeneral.miJuego.getInstanciaJuego()==2)){
                                    if(claseGeneral.miJuego.getPrimeraEnCasa()==miId){
                                        yoGano=true;
                                        apagarTodosBotones();
                                    } else{
                                        yoPierdo=true;
                                        apagarTodosBotones();
                                    }
                                }
                } else{
                    //frmPrincipal.log("Mi carta era mÃ¡s chica");
                    suTurno();
                    claseGeneral.miJuego.setPrimeraCarta(true);
                    claseGeneral.lstJugadores.get(suID).setInstanciasGanadas(claseGeneral.lstJugadores.get(suID).getInstanciasGanadas()+1);
                    apagarTodosBotones();
                    //frmPrincipal.log("Le toca a Ã©l");
                    if(claseGeneral.lstJugadores.get(suID).getInstanciasGanadas()==2){
                        yoPierdo=true;
                    }
                }
                int inst = claseGeneral.miJuego.getInstanciaJuego()+1;
                frmPrincipal.log("Sumo una instancia al juego. Es la instancia Nro "+inst);
                claseGeneral.miJuego.setInstanciaJuego(inst);
                prenderBotones();
                if(yoGano){
                    frmPrincipal.log("GanÃ© dos instancias");
                    Juego.ganarMano(miId);
                }
                if(yoPierdo){
                    frmPrincipal.log("PerdÃ­ dos instancias");
                    Juego.ganarMano(suID);
                }
            }
        }
    }
    
    public void pintarMisCartas(){
        int miId = claseGeneral.getMiId();
        pintar(miCarta1,claseGeneral.lstJugadores.get(miId).getCartas().get(0).traerCarta());
        pintar(miCarta2,claseGeneral.lstJugadores.get(miId).getCartas().get(1).traerCarta());
        pintar(miCarta3,claseGeneral.lstJugadores.get(miId).getCartas().get(2).traerCarta());
        pintarCartasOponente();
    }
    
    public void pintarCartasOponente(){
        pintar(suCarta1,"CartaAzul1");
        pintar(suCarta2,"CartaAzul2");
        pintar(suCarta3,"CartaAzul1");
    }
    
    public void pintar(JLabel lbl, String valor){
        String path = "/Cartas/"+valor+".jpg";
        URL url = this.getClass().getResource(path);
        ImageIcon icon = new ImageIcon(url);
        Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lbl.getWidth(), lbl.getHeight(), Image.SCALE_DEFAULT));
        lbl.setIcon(icono);
    }
    
    public void actualizarPuntos(){
        int puntos;
        puntos = claseGeneral.lstJugadores.get(claseGeneral.getMiId()).getPuntos();
        if(puntos!=0){
            if(puntos<=5){
                pintar(lblMisPuntos1,"puntos"+puntos);
            } else if(puntos<=10){
                pintar(lblMisPuntos1,"puntos5");
                pintar(lblMisPuntos2,"puntos"+(puntos-5));
            } else if(puntos<=15){
                pintar(lblMisPuntos1,"puntos5");
                pintar(lblMisPuntos2,"puntos5");
                pintar(lblMisPuntos3,"puntos"+(puntos-10));
            } else if(puntos<=20){
                pintar(lblMisPuntos1,"puntos5");
                pintar(lblMisPuntos2,"puntos5");
                pintar(lblMisPuntos3,"puntos5");
                pintar(lblMisPuntos4,"puntos"+(puntos-15));
            } else if(puntos<=25){
                pintar(lblMisPuntos1,"puntos5");
                pintar(lblMisPuntos2,"puntos5");
                pintar(lblMisPuntos3,"puntos5");
                pintar(lblMisPuntos4,"puntos5");
                pintar(lblMisPuntos5,"puntos"+(puntos-20));
            } else if(puntos<=30){
                pintar(lblMisPuntos1,"puntos5");
                pintar(lblMisPuntos2,"puntos5");
                pintar(lblMisPuntos3,"puntos5");
                pintar(lblMisPuntos4,"puntos5");
                pintar(lblMisPuntos5,"puntos5");
                pintar(lblMisPuntos6,"puntos"+(puntos-25));
            }
        }

        puntos = claseGeneral.lstJugadores.get(Math.abs(claseGeneral.getMiId()-1)).getPuntos();
        if(puntos!=0){
            if(puntos<=5){
                pintar(lblSusPuntos1,"puntos"+puntos);
            } else if(puntos<=10){
                pintar(lblSusPuntos1,"puntos5");
                pintar(lblSusPuntos2,"puntos"+(puntos-5));
            } else if(puntos<=15){
                pintar(lblSusPuntos1,"puntos5");
                pintar(lblSusPuntos2,"puntos5");
                pintar(lblSusPuntos3,"puntos"+(puntos-10));
            } else if(puntos<=20){
                pintar(lblSusPuntos1,"puntos5");
                pintar(lblSusPuntos2,"puntos5");
                pintar(lblSusPuntos3,"puntos5");
                pintar(lblSusPuntos4,"puntos"+(puntos-15));
            } else if(puntos<=25){
                pintar(lblSusPuntos1,"puntos5");
                pintar(lblSusPuntos2,"puntos5");
                pintar(lblSusPuntos3,"puntos5");
                pintar(lblSusPuntos4,"puntos5");
                pintar(lblSusPuntos5,"puntos"+(puntos-20));
            } else if(puntos<=30){
                pintar(lblSusPuntos1,"puntos5");
                pintar(lblSusPuntos2,"puntos5");
                pintar(lblSusPuntos3,"puntos5");
                pintar(lblSusPuntos4,"puntos5");
                pintar(lblSusPuntos5,"puntos5");
                pintar(lblSusPuntos6,"puntos"+(puntos-25));
            }
        }
    }
    
    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        this.setTitle("Jugando en sala -"+claseGeneral.getNombreSala()+"-");
        lblYo.setForeground(Color.BLUE);
        lblEl.setForeground(Color.BLACK);
        if(!claseGeneral.isSoyServer()){
            apagarTodosBotones();
            lblYo.setForeground(Color.BLACK);
            lblEl.setForeground(Color.BLUE);
        }
        pintar(lblTabla,"TablaPuntos");
    }//GEN-LAST:event_formInternalFrameOpened
  
    private void miCarta1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miCarta1MouseClicked
        if(claseGeneral.miJuego.isRonda()){
            if(claseGeneral.miJuego.getTurno()==claseGeneral.getMiId()){
                if(!claseGeneral.lstJugadores.get(claseGeneral.getMiId()).isCarta1tirada()){
                    claseGeneral.lstJugadores.get(claseGeneral.getMiId()).setCarta1tirada(true);
                    tirarCarta(0);
                    pintar(lblYoCanto,"Blanco");
                    pintar(lblElCanta,"Blanco");
                    lblSusTantos.setText("");
                    lblMisTantos.setText("");
                }
            }
        }  
    }//GEN-LAST:event_miCarta1MouseClicked

    private void miCarta2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miCarta2MouseClicked
        if(claseGeneral.miJuego.isRonda()){
            if(claseGeneral.miJuego.getTurno()==claseGeneral.getMiId()){
                if(!claseGeneral.lstJugadores.get(claseGeneral.getMiId()).isCarta2tirada()){
                    claseGeneral.lstJugadores.get(claseGeneral.getMiId()).setCarta2tirada(true);
                    tirarCarta(1);
                    pintar(lblYoCanto,"Blanco");
                    pintar(lblElCanta,"Blanco");
                    lblSusTantos.setText("");
                    lblMisTantos.setText("");
                }
            }
        } 
    }//GEN-LAST:event_miCarta2MouseClicked

    private void miCarta3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miCarta3MouseClicked
        if(claseGeneral.miJuego.isRonda()){
            if(claseGeneral.miJuego.getTurno()==claseGeneral.getMiId()){
                if(!claseGeneral.lstJugadores.get(claseGeneral.getMiId()).isCarta3tirada()){
                    claseGeneral.lstJugadores.get(claseGeneral.getMiId()).setCarta3tirada(true);
                    tirarCarta(2);
                    pintar(lblYoCanto,"Blanco");
                    pintar(lblElCanta,"Blanco");
                    lblSusTantos.setText("");
                    lblMisTantos.setText("");
                }
            }
        } 
    }//GEN-LAST:event_miCarta3MouseClicked

    private void cmdTrucoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTrucoActionPerformed
        switch(claseGeneral.miJuego.getInstanciaTruco()){
            case 0:
                if(claseGeneral.miJuego.getEsperando().equals("truco")){
                    cantarReTruco();
                    claseGeneral.agregarAlChat("notif", "Quiero Re Truco", claseGeneral.getMiId());
                } else{
                    cantarTruco();
                    claseGeneral.agregarAlChat("notif", "Truco!", claseGeneral.getMiId());
                }
                break;
            case 2:
                if(claseGeneral.miJuego.getEsperando().equals("retruco")){
                    cantarValeCuatro();
                    claseGeneral.agregarAlChat("notif", "Quiero Vale 4!", claseGeneral.getMiId());
                } else{
                    cantarReTruco();
                    claseGeneral.agregarAlChat("notif", "Quiero Re Truco!", claseGeneral.getMiId());
                }
                    break;
            case 3:
                cantarValeCuatro();
                claseGeneral.agregarAlChat("notif", "Quiero Vale 4!", claseGeneral.getMiId());
                break;
        }
    }//GEN-LAST:event_cmdTrucoActionPerformed

    private void cmdQuieroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdQuieroActionPerformed
        switch(cmdQuiero.getText()){
            case "Quiero":
                //<editor-fold defaultstate="collapsed" desc="Si EstÃ¡ en Quiero">
                switch(claseGeneral.miJuego.getEsperando()){
                    case "truco":
                        //<editor-fold defaultstate="collapsed" desc="Quiero el Truco">
                        claseGeneral.miJuego.setTrucoJugando(true);
                        claseGeneral.miJuego.setEnvido(false);
                        claseGeneral.miJuego.setInstanciaTruco(2);
                        apagarTodosBotones();
                        claseGeneral.agregarAlChat("quiero", "Truco", claseGeneral.getMiId());
                        claseGeneral.miJuego.setTieneElQuiero(claseGeneral.getMiId());
                        claseGeneral.enviarQuiero();
                        
                        //</editor-fold>
                        break;
                    case "retruco":
                        //<editor-fold defaultstate="collapsed" desc="Quiero el Retruco">
                        claseGeneral.miJuego.setTrucoJugando(true);
                        claseGeneral.miJuego.setEnvido(false);
                        claseGeneral.miJuego.setInstanciaTruco(3);
                        apagarTodosBotones();
                        claseGeneral.agregarAlChat("quiero", "Re Truco", claseGeneral.getMiId());
                        claseGeneral.miJuego.setTieneElQuiero(claseGeneral.getMiId());
                        claseGeneral.enviarQuiero();
                        claseGeneral.miJuego.setTieneElQuiero(claseGeneral.getMiId());
                        //</editor-fold>
                        break;
                    case "valecuatro":
                        //<editor-fold defaultstate="collapsed" desc="Quiero el Vale 4">
                        claseGeneral.miJuego.setTrucoJugando(true);
                        claseGeneral.miJuego.setEnvido(false);
                        claseGeneral.miJuego.setInstanciaTruco(4);
                        apagarTodosBotones();
                        claseGeneral.agregarAlChat("quiero", "Vale Cuatro", claseGeneral.getMiId());
                        claseGeneral.miJuego.setTieneElQuiero(claseGeneral.getMiId());
                        claseGeneral.enviarQuiero();
                        //</editor-fold>
                        break;
                    case "faltaenvido":
                        //<editor-fold defaultstate="collapsed" desc="Quiero elFalta Envido">
                        claseGeneral.agregarAlChat("quiero", "Falta Envido", claseGeneral.getMiId());
                        apagarTodosBotones();
                        claseGeneral.miJuego.setEnvido(false); //Se acabÃ³ el envido
                        
                        quieroLosTantos();
                        //</editor-fold>
                        break;
                    case "envidoenvido":
                        //<editor-fold defaultstate="collapsed" desc="Quiero el Envido-Envido">
                        claseGeneral.agregarAlChat("quiero", "Envido-Envido", claseGeneral.getMiId());
                        apagarTodosBotones();
                        claseGeneral.miJuego.setEnvido(false); //Se acabÃ³ el envido
                        
                        quieroLosTantos();
                        //</editor-fold>
                        break;
                    case "envido":
                        //<editor-fold defaultstate="collapsed" desc="Quiero el Envido">
                        claseGeneral.agregarAlChat("quiero", "Envido", claseGeneral.getMiId());
                        apagarTodosBotones();
                        claseGeneral.miJuego.setEnvido(false); //Se acabÃ³ el envido
                        
                        quieroLosTantos();
                        
                        //</editor-fold>
                        break;
                    case "envidorealenvido":
                        claseGeneral.agregarAlChat("quiero", "Envido-Real Envido", claseGeneral.getMiId());
                        apagarTodosBotones();
                        claseGeneral.miJuego.setEnvido(false); //Se acabÃ³ el envido
                        
                        quieroLosTantos();
                        break;
                       
                    case "realenvido":
                        claseGeneral.agregarAlChat("quiero", "Real Envido", claseGeneral.getMiId());
                        apagarTodosBotones();
                        claseGeneral.miJuego.setEnvido(false); //Se acabÃ³ el envido
                        
                        quieroLosTantos();
                        break;
                        
                    case "envidoenvidorealenvido":
                        claseGeneral.agregarAlChat("quiero", "Envido-Envido-Real Envido", claseGeneral.getMiId());
                        apagarTodosBotones();
                        claseGeneral.miJuego.setEnvido(false); //Se acabÃ³ el envido
                        
                        quieroLosTantos();
                        break;
                }
                //</editor-fold>
                break;
            case "Cantar":
                int miId=claseGeneral.getMiId();
                int suId=Math.abs(claseGeneral.getMiId()-1);
                if(claseGeneral.isSoyServer()){SimpleServer.enviarDatos("JGOTANT"+miId);}
                else{SimpleClient.enviarDatos("JGOTANT"+miId);}
                
                int misTantos = claseGeneral.lstJugadores.get(claseGeneral.getMiId()).contarTantos();
                int susTantos = claseGeneral.lstJugadores.get(Math.abs(claseGeneral.getMiId()-1)).contarTantos();
                
                lblMisTantos.setText(""+misTantos);
                
                if(misTantos>susTantos){
                    Juego.sumarTantos(miId);
                } else{
                    Juego.sumarTantos(suId);
                }
                
                apagarTodosBotones();
                frmJuego.cmdQuiero.setText("Quiero");
                frmJuego.cmdNoQuiero.setText("No Quiero");
                claseGeneral.miJuego.setEnvido(false);
                claseGeneral.miJuego.setRonda(true);
                prenderBotones();
        }
        
    }//GEN-LAST:event_cmdQuieroActionPerformed

    private void cmdNoQuieroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNoQuieroActionPerformed
        switch(cmdNoQuiero.getText()){
            case "Son Buenas":
                int miId=claseGeneral.getMiId();
                int suId=Math.abs(claseGeneral.getMiId()-1);
                
                if(claseGeneral.isSoyServer()){SimpleServer.enviarDatos("JGOSONB"+miId);}
                else{SimpleClient.enviarDatos("JGOSONB"+miId);}
                
                pintar(lblYoCanto,"SonBuenas");
                
                Juego.sumarTantos(suId);
                
                apagarTodosBotones();
                frmJuego.cmdQuiero.setText("Quiero");
                frmJuego.cmdNoQuiero.setText("No Quiero");
                claseGeneral.miJuego.setEnvido(false);
                claseGeneral.miJuego.setRonda(true);
                prenderBotones();
                break;
            case "No Quiero":
                int suid=Math.abs(claseGeneral.getMiId()-1);
                switch(claseGeneral.miJuego.getEsperando()){
                    case "truco":
                        claseGeneral.miJuego.setEnvido(false);
                        claseGeneral.miJuego.setInstanciaTruco(2);
                        apagarTodosBotones();
                        claseGeneral.agregarAlChat("noquiero", "Truco", claseGeneral.getMiId());
                        claseGeneral.enviarNoQuiero();
                        Juego.alMazo(claseGeneral.getMiId());
                        break;
                    case "retruco":
                        claseGeneral.miJuego.setInstanciaTruco(3);
                        apagarTodosBotones();
                        claseGeneral.agregarAlChat("noquiero", "Re Truco", claseGeneral.getMiId());
                        claseGeneral.enviarNoQuiero();
                        Juego.alMazo(claseGeneral.getMiId());
                        break;
                    case "valecuatro":
                        claseGeneral.miJuego.setInstanciaTruco(4);
                        apagarTodosBotones();
                        claseGeneral.agregarAlChat("noquiero", "Vale Cuatro", claseGeneral.getMiId());
                        claseGeneral.enviarNoQuiero();
                        Juego.alMazo(claseGeneral.getMiId());
                        break;
                    case "envido":
                        //<editor-fold defaultstate="collapsed" desc="No Quiero El Envido">
                        claseGeneral.lstJugadores.get(suid).setPuntos(claseGeneral.lstJugadores.get(suid).getPuntos()+1);
                        actualizarPuntos();
                        apagarTodosBotones();
                        claseGeneral.miJuego.setEnvido(false);
                        prenderBotones();
                        claseGeneral.agregarAlChat("noquiero", "Envido", claseGeneral.getMiId());
                        claseGeneral.miJuego.setRonda(true);
                        claseGeneral.enviarNoQuiero();
                        break;
                        //</editor-fold>
                    case "realenvido":
                        //<editor-fold defaultstate="collapsed" desc="No Quiero el Real Envido">
                        claseGeneral.lstJugadores.get(suid).setPuntos(claseGeneral.lstJugadores.get(suid).getPuntos()+1);
                        actualizarPuntos();
                        apagarTodosBotones();
                        claseGeneral.miJuego.setEnvido(false);
                        prenderBotones();
                        claseGeneral.agregarAlChat("noquiero", "Real Envido", claseGeneral.getMiId());
                        claseGeneral.miJuego.setRonda(true);
                        claseGeneral.enviarNoQuiero();
                        break;
                        //</editor-fold>
                    case "faltaenvido":
                        //<editor-fold defaultstate="collapsed" desc="No Quiero el Falta Envido">
                        claseGeneral.lstJugadores.get(suid).setPuntos(claseGeneral.lstJugadores.get(suid).getPuntos()+1);
                        actualizarPuntos();
                        apagarTodosBotones();
                        claseGeneral.miJuego.setEnvido(false);
                        prenderBotones();
                        claseGeneral.agregarAlChat("noquiero", "Falta Envido", claseGeneral.getMiId());
                        claseGeneral.miJuego.setRonda(true);
                        claseGeneral.enviarNoQuiero();
                        break;
                        //</editor-fold>
                    case "envidoenvido":
                        //<editor-fold defaultstate="collapsed" desc="No Quiero el Envido-Envido">
                        claseGeneral.lstJugadores.get(suid).setPuntos(claseGeneral.lstJugadores.get(suid).getPuntos()+2);
                        actualizarPuntos();
                        apagarTodosBotones();
                        claseGeneral.miJuego.setEnvido(false);
                        prenderBotones();
                        claseGeneral.agregarAlChat("noquiero", "Envido-Envido", claseGeneral.getMiId());
                        claseGeneral.miJuego.setRonda(true);
                        claseGeneral.enviarNoQuiero();
                        //</editor-fold>
                        break;
                    case "envidorealenvido":
                        //<editor-fold defaultstate="collapsed" desc="No Quiero el Envido-Real Envido">
                        claseGeneral.lstJugadores.get(suid).setPuntos(claseGeneral.lstJugadores.get(suid).getPuntos()+2);
                        actualizarPuntos();
                        apagarTodosBotones();
                        claseGeneral.miJuego.setEnvido(false);
                        prenderBotones();
                        claseGeneral.agregarAlChat("noquiero", "Envido-Real Envido", claseGeneral.getMiId());
                        claseGeneral.miJuego.setRonda(true);
                        claseGeneral.enviarNoQuiero();
                        //</editor-fold>
                        break;
                    case "envidoenvidorealenvido":
                        //<editor-fold defaultstate="collapsed" desc="No Quiero el Envido-Envido-Real Envido">
                        claseGeneral.lstJugadores.get(suid).setPuntos(claseGeneral.lstJugadores.get(suid).getPuntos()+4);
                        actualizarPuntos();
                        apagarTodosBotones();
                        claseGeneral.miJuego.setEnvido(false);
                        prenderBotones();
                        claseGeneral.agregarAlChat("noquiero", "Envido-Envido-Real Envido", claseGeneral.getMiId());
                        claseGeneral.miJuego.setRonda(true);
                        claseGeneral.enviarNoQuiero();
                        //</editor-fold>
                        break;
                }
        }
        cmdNoQuiero.setText("No Quiero");

    }//GEN-LAST:event_cmdNoQuieroActionPerformed

    private void txtEnviarChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEnviarChatActionPerformed
        if(claseGeneral.isSoyServer()){SimpleServer.enviarDatos("JGOCHAT"+claseGeneral.getMiId()+txtEnviarChat.getText());}
            else{SimpleClient.enviarDatos("JGOCHAT"+claseGeneral.getMiId()+txtEnviarChat.getText());}
        SimpleAttributeSet attrs = new SimpleAttributeSet();
        StyleConstants.setBold(attrs, true);
        try {
            //El nombre primero en negrita
            txtChat.getStyledDocument().insertString(txtChat.getStyledDocument().getLength(),claseGeneral.getMiNombre()+" > ",attrs);
            StyleConstants.setBold(attrs, false);
            txtChat.getStyledDocument().insertString(txtChat.getStyledDocument().getLength(),txtEnviarChat.getText()+"\n",attrs);
        } catch (BadLocationException ex) {
            Logger.getLogger(claseGeneral.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtEnviarChat.setText("");

    }//GEN-LAST:event_txtEnviarChatActionPerformed

    private void cmdAlMazoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAlMazoActionPerformed
        switch(cmdAlMazo.getText()){
            case "Repartir":
                claseGeneral.miJuego.pintarCartas();
                if(claseGeneral.isSoyServer()){
                    SimpleServer.enviarDatos("JGOREPA");
                } else{
                    SimpleClient.enviarDatos("JGOREPA");
                }
                cmdAlMazo.setText("Al Mazo");
                break;
            case "Al Mazo":
                int miId=claseGeneral.getMiId();
                String esperando = claseGeneral.miJuego.getEsperando();
                if(claseGeneral.isSoyServer()){SimpleServer.enviarDatos("JGOMAZO"+miId);}
                else{SimpleClient.enviarDatos("JGOMAZO"+miId);}
                claseGeneral.agregarAlChat("almazo", "", claseGeneral.getMiId());

                switch(esperando){
                    case "truco":
                        claseGeneral.miJuego.setTrucoJugando(true);
                        claseGeneral.miJuego.setInstanciaTruco(2);
                        apagarTodosBotones();
                        break;
                    case "retruco":
                        claseGeneral.miJuego.setInstanciaTruco(3);
                        apagarTodosBotones();
                        break;
                    case "valecuatro":
                        claseGeneral.miJuego.setInstanciaTruco(4);
                        apagarTodosBotones();
                        break;
                }
                Juego.alMazo(claseGeneral.getMiId());
                break;
            case "Ver sus tantos!":
                pintar(lblElCanta,"Blanco");
                lblSusTantos.setText(""+claseGeneral.lstJugadores.get(Math.abs(claseGeneral.getMiId()-1)).contarTantos());
                cmdAlMazo.setText("Al Mazo");
                cmdTruco.setEnabled(true);
                break;
        }
    }//GEN-LAST:event_cmdAlMazoActionPerformed

    private void cmdEnvidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEnvidoActionPerformed
        if(claseGeneral.isSoyServer()){SimpleServer.enviarDatos("JGOENV1"+claseGeneral.getMiId());}
        else{SimpleClient.enviarDatos("JGOENV1"+claseGeneral.getMiId());}
        pintar(lblYoCanto,"Envido");
        claseGeneral.miJuego.setRonda(false);
        apagarTodosBotones();
        claseGeneral.agregarAlChat("notif", "Envido", claseGeneral.getMiId());
        if(claseGeneral.miJuego.getInstanciaEnvido()==0){
            claseGeneral.miJuego.setInstanciaEnvido(1);
            claseGeneral.miJuego.setEsperando("envido");
        } else{
            claseGeneral.miJuego.setInstanciaEnvido(2);
            claseGeneral.miJuego.setEsperando("realenvido");
        }
    }//GEN-LAST:event_cmdEnvidoActionPerformed

    private void cmdRealEnvidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRealEnvidoActionPerformed
        if(claseGeneral.isSoyServer()){SimpleServer.enviarDatos("JGOENV2"+claseGeneral.getMiId());}
        else{SimpleClient.enviarDatos("JGOENV2"+claseGeneral.getMiId());}
        pintar(lblYoCanto,"RealEnvido");
        apagarTodosBotones();
        claseGeneral.agregarAlChat("notif", "Real Envido", claseGeneral.getMiId());
        switch(claseGeneral.miJuego.getInstanciaEnvido()){
            case 0:
                claseGeneral.miJuego.setInstanciaEnvido(6);
                claseGeneral.miJuego.setEsperando("realenvido");
                break;
            case 1:
                claseGeneral.miJuego.setInstanciaEnvido(3);
                claseGeneral.miJuego.setEsperando("envidorealenvido");
                break;
            case 2:
                claseGeneral.miJuego.setInstanciaEnvido(4);
                claseGeneral.miJuego.setEsperando("envidoenvidorealenvido");
                break;
        }
    }//GEN-LAST:event_cmdRealEnvidoActionPerformed

    private void cmdFaltaEnvidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFaltaEnvidoActionPerformed
        if(claseGeneral.isSoyServer()){SimpleServer.enviarDatos("JGOENV3"+claseGeneral.getMiId());}
        else{SimpleClient.enviarDatos("JGOENV3"+claseGeneral.getMiId());}
        pintar(lblYoCanto,"FaltaEnvido");
        apagarTodosBotones();
        
        claseGeneral.agregarAlChat("notif", "Falta Envido", claseGeneral.getMiId());
        claseGeneral.miJuego.setEsperando("faltaenvido");
        claseGeneral.miJuego.setInstanciaEnvido(5);
    }//GEN-LAST:event_cmdFaltaEnvidoActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton cmdAlMazo;
    public static javax.swing.JButton cmdEnvido;
    public static javax.swing.JButton cmdFaltaEnvido;
    public static javax.swing.JButton cmdNoQuiero;
    public static javax.swing.JButton cmdQuiero;
    public static javax.swing.JButton cmdRealEnvido;
    public static javax.swing.JButton cmdTruco;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblEl;
    public static javax.swing.JLabel lblElCanta;
    public static javax.swing.JLabel lblMisPuntos1;
    public static javax.swing.JLabel lblMisPuntos2;
    public static javax.swing.JLabel lblMisPuntos3;
    public static javax.swing.JLabel lblMisPuntos4;
    public static javax.swing.JLabel lblMisPuntos5;
    public static javax.swing.JLabel lblMisPuntos6;
    public static javax.swing.JLabel lblMisTantos;
    public static javax.swing.JLabel lblSusPuntos1;
    public static javax.swing.JLabel lblSusPuntos2;
    public static javax.swing.JLabel lblSusPuntos3;
    public static javax.swing.JLabel lblSusPuntos4;
    public static javax.swing.JLabel lblSusPuntos5;
    public static javax.swing.JLabel lblSusPuntos6;
    public static javax.swing.JLabel lblSusTantos;
    private javax.swing.JLabel lblTabla;
    private javax.swing.JLabel lblYo;
    public static javax.swing.JLabel lblYoCanto;
    public static javax.swing.JLabel miCarta1;
    public static javax.swing.JLabel miCarta2;
    public static javax.swing.JLabel miCarta3;
    public static javax.swing.JLabel miCartaTirada1;
    public static javax.swing.JLabel miCartaTirada2;
    public static javax.swing.JLabel miCartaTirada3;
    public static javax.swing.JLabel suCarta1;
    public static javax.swing.JLabel suCarta2;
    public static javax.swing.JLabel suCarta3;
    public static javax.swing.JLabel suCartaTirada1;
    public static javax.swing.JLabel suCartaTirada2;
    public static javax.swing.JLabel suCartaTirada3;
    private javax.swing.JTabbedPane tabChatPuntos;
    public static javax.swing.JTextPane txtChat;
    public static javax.swing.JTextField txtEnviarChat;
    // End of variables declaration//GEN-END:variables
}
